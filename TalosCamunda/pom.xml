<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>de.hpi.bpt</groupId>
  <artifactId>talosCamunda</artifactId>
  <version>1.0.0</version>

  <packaging>war</packaging>

  <name>Camunda BPM Process Application</name>
  <description>A Process Application for [Camunda BPM](http://docs.camunda.org). [The project has been generated by the Maven archetype 'camunda-archetype-servlet-war-7.11.1']</description>

  <properties>
    <camunda.version>7.12.0</camunda.version>
    <!--
    Adjust if you want to use Camunda Enterprise Edition (EE):
    <camunda.version>7.11.0-ee</camunda.version>
    Make sure you also switch to EE repository below
    -->
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <failOnMissingWebXml>false</failOnMissingWebXml>
  </properties>
  
  	
	<profiles>
		<profile>
			<id>eclipse</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<version>3.8.0</version>
						<configuration>
							<source>11</source>
							<target>11</target>
						</configuration>
						<executions>
							<execution>
								<id>ignore-module-info</id>
								<goals>
									<goal>testCompile</goal>
								</goals>
								<configuration>
									<testExcludes>
										<!-- Hide test module-info so eclipse doesn't break -->
										<testExclude>module-info.java</testExclude>
									</testExcludes>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.camunda.bpm</groupId>
        <artifactId>camunda-bom</artifactId>
        <version>${camunda.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <!-- process engine, needs to be 'provided' because it's already a shared library in the container -->
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine</artifactId>
      <scope>provided</scope>
    </dependency>

	<!-- 
    <dependency>
	  <groupId>org.camunda.bpm.assert</groupId>
      <artifactId>camunda-bpm-assert</artifactId>
      <version>5.0.0</version>
      <scope>test</scope>
    </dependency>
	<dependency>
	  <groupId>org.assertj</groupId>
	  <artifactId>assertj-core</artifactId>
	  <version>3.13.2</version>
	  <scope>test</scope>
	</dependency> -->

    

    <!-- Required to use Spin dataformat support in unit tests -->
    <dependency>
      <groupId>org.camunda.spin</groupId>
      <artifactId>camunda-spin-dataformat-all</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine-plugin-spin</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- Required to use Templates in unit tests -->
    <dependency>
      <groupId>org.camunda.template-engines</groupId>
      <artifactId>camunda-template-engines-freemarker</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>3.1.0</version>
      <scope>provided</scope>
    </dependency>


    <dependency>
      <!-- Needed for InMemoryH2Test -->
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>1.4.197</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <!--  java util logging => slf4j -->
      <groupId>org.slf4j</groupId>
      <artifactId>jul-to-slf4j</artifactId>
      <version>1.7.25</version>
      <scope>test</scope>
    </dependency>

    <!-- Add your own dependencies here, if in compile scope, they are added to the war -->

    <dependency>
    	<groupId>de.hpi.bpt</groupId>
    	<artifactId>Talos</artifactId>
    	<version>[1.0.0,)</version>
    </dependency>
   	<dependency>
		<groupId>de.hpi.bpt.talos</groupId>
		<artifactId>talosUiPath</artifactId>
		<version>[1.0.0,)</version>
	</dependency>
    
	<dependency>
		<groupId>org.junit.jupiter</groupId>
		<artifactId>junit-jupiter-api</artifactId>
		<version>5.6.0</version>
		<scope>test</scope>
	</dependency>
	<dependency>
		<groupId>org.junit.jupiter</groupId>
		<artifactId>junit-jupiter-engine</artifactId>
		<version>5.6.0</version>
		<scope>test</scope>
	</dependency>
	<dependency>
	    <groupId>com.github.ybroeker</groupId>
	    <artifactId>camunda-junit5</artifactId>
	    <version>0.0.9</version>
	    <scope>test</scope>
	</dependency>

  </dependencies>

  <repositories>
    <repository>
      <id>camunda-bpm-nexus</id>
      <name>Camunda Maven Repository</name>
      <url>https://app.camunda.com/nexus/content/groups/public</url>
    </repository>
    <!-- enable this for EE dependencies (requires credentials in ~/.m2/settings.xml)
    <repository>
      <id>camunda-bpm-nexus-ee</id>
      <name>Camunda Enterprise Maven Repository</name>
      <url>https://app.camunda.com/nexus/content/repositories/camunda-bpm-ee</url>
    </repository>
    -->
	<repository>
		<id>jitpack.io</id>
		<url>https://jitpack.io</url>
		<snapshots>
			<enabled>true</enabled>
		</snapshots>
	</repository>
  </repositories>

  <build>
    <finalName>${project.artifactId}</finalName>
    <plugins>
    		<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.0</version>
				<configuration>
					<source>11</source>
					<target>11</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.0.0-M4</version>
			</plugin>
			<plugin>
				<groupId>de.sormuras.junit</groupId>
				<artifactId>junit-platform-maven-plugin</artifactId>
				<version>1.0.0-M5</version>
				<extensions>true</extensions>
				<configuration>
					<executor>JAVA</executor>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-help-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<id>show-profiles</id>
						<phase>compile</phase>
						<goals>
							<goal>active-profiles</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
      <plugin>
        <!-- Deploy to Tomcat using: mvn clean package antrun:run
             Follow the instructions in build.properties.example to make it work!-->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <configuration>
          <tasks>
            <ant antfile="${basedir}/build.xml">
              <target name="copy.war.into.tomcat" />
            </ant>
          </tasks>
        </configuration>
      </plugin>
      <!-- Tomcat Maven Plugin

      Deploy to Tomcat using:
      mvn clean tomcat7:deploy

      Redeploy:
      mvn clean tomcat7:redeploy

      Undeploy:
      mvn tomcat7:undeploy

           To use this plugin, add these lines to your tomcat-users.xml: (inside the <tomcat-users>-tag)
           <role rolename="manager-script"/>
           <user username="admin" password="admin" roles="manager-script"/>

       -->
      <plugin>
        <groupId>org.apache.tomcat.maven</groupId>
        <artifactId>tomcat7-maven-plugin</artifactId>
        <version>2.2</version>
        <configuration>
          <url>http://localhost:8080/manager/text</url>
          <username>admin</username>
          <password>admin</password>
        </configuration>
      </plugin>
      <plugin>
        <!-- Deploy to JBoss AS7: mvn clean jboss-as:deploy See also: https://docs.jboss.org/jbossas/7/plugins/maven/latest/examples/deployment-example.html -->
        <groupId>org.jboss.as.plugins</groupId>
        <artifactId>jboss-as-maven-plugin</artifactId>
        <version>7.9.Final</version>
      </plugin>
      <plugin>
        <!-- Deploy to Wildfly: mvn clean wildfly:deploy See also: https://docs.jboss.org/wildfly/plugins/maven/latest/examples/deployment-example.html -->
        <groupId>org.wildfly.plugins</groupId>
        <artifactId>wildfly-maven-plugin</artifactId>
        <version>1.2.1.Final</version>
      </plugin>
    </plugins>
  </build>
  
   	<distributionManagement>
		<repository>
			<id>github</id>
			<name>Talos packages</name>
			<url>https://maven.pkg.github.com/LeonBein/Talos</url>
		</repository>
	</distributionManagement>
</project>
